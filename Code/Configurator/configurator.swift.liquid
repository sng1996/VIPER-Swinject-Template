//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

import Swinject

class {{ module_info.name }}Configurator {

    func createModule() -> UIViewController {
        let container = Container()

        container.register({{ module_info.name }}Interactor.self) { (r, presenter: {{ module_info.name }}Presenter) in
            let interactor = {{ module_info.name }}Interactor()
            interactor.output = presenter

            return interactor
        }

        container.register({{ module_info.name }}Router.self) { (r, viewController: {{ module_info.name }}ViewController) in
            let router = {{ module_info.name }}Router()
            router.viewController = viewController

            return router
        }

        container.register({{ module_info.name }}Presenter.self) { (r, viewController: {{ module_info.name }}ViewController) in
            let presenter = {{ module_info.name }}Presenter()
            presenter.view = viewController
            presenter.interactor = r.resolve({{ module_info.name }}Interactor.self, argument: presenter)
            presenter.router = r.resolve({{ module_info.name }}Router.self, argument: viewController)

            return presenter
        }

        container.register({{ module_info.name }}ViewController.self) { r in
            let viewController = {{ module_info.name }}ViewController()
            viewController.output = r.resolve({{ module_info.name }}Presenter.self, argument: viewController)

            return viewController
        }

        return container.resolve({{ module_info.name }}ViewController.self)!
    }

}
